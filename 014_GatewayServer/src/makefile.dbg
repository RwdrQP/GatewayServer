CC=cc
CPP=g++

machine=$(shell uname -m)
ifeq "$(machine)" "x86_64"
	USR_LIB_DIR=-L/usr/lib64
else
	USR_LIB_DIR=-L/usr/lib
endif

#64Œª±‡“Îº”…œ∫Í-D_KYLIN_USE_64BIT_

ifeq "$(ENABLE_EXTERNAL_OUTPUT_THREAD)" "yes"
	EXTRA += -DENABLE_EXTERNAL_OUTPUT_THREAD	
endif

ifeq "$(TNM2)" "yes"
    C_ARGS=-g -Wall -DENABLE_TNM2_REPORT -D_DEBUG_ -D_FILE_OFFSET_BITS=64 -D_KYLIN_USE_64BIT_ $(EXTRA)
else
    C_ARGS=-g -Wall -D_DEBUG_ -D_FILE_OFFSET_BITS=64 -D_KYLIN_USE_64BIT_ $(EXTRA)
endif

INCLUDE= -I/usr/include
LIBS= ${USR_LIB_DIR} -lz -lpthread

BINARY = LotusServer.dbg

SVROBJS = MainApp.o LotusLogAdapter.o SignalWrapper.o CodeQueueAssemble.o CodeEngine.o \
		CodeQueue.o SharedMemory.o LotusLogEngine.o TimeTools.o base.o oi_tea.o \
		LotusListener.o IOHandler.o FDPool.o EpollWrapper.o SocketOperator.o \
		LotusConfigMng.o ConfigAssemble.o ConfigFile.o \
		CodeDispatcher.o PreDecoder.o InternalServerPool.o ExternalClientPool.o \
		LotusStatistic.o OverloadSafeguard.o BillWriter.o MsgStatistic.o Statistic.o \
		Attr_API.o ExternalOutputThread.o

%.o : %.cpp
	$(CPP) $(C_ARGS) $(INCLUDE) -c  $<
	
%.o : %.c
	$(CPP) $(C_ARGS) $(INCLUDE) -c  $<

all:$(BINARY)

$(BINARY): $(SVROBJS)
	rm -f $@	
	$(CPP) $(C_ARGS) -o $@ $(SVROBJS) $(LIBS) -static

clean:
	rm -f $(SVROBJS) $(BINARY)
